# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build nodejs
    runs-on: ubuntu-latest
    env:
      NODEJS_VERSION: 20.11.1
      RELEASE_BUILD: 1

    steps:
    - name: Install build tools
      run: |
        sudo apt install -y git python3 python3-pkgconfig gcc-13 g++-13 perl make nasm libtext-template-perl build-essential
        sudo snap install node --classic --channel=20
    - name: Download nodejs ${{ env.NODEJS_VERSION }}
      run: git -C /opt clone --depth 1 --branch v$NODEJS_VERSION https://github.com/nodejs/node.git nodejs
      working-directory: /opt
    - name: Update nodejs ${{ env.NODEJS_VERSION }}
      run: |
        ./tools/dep_updaters/update-nghttp2.sh
        sed -i 's/nghttp2_npn.c/nghttp2_alpn.c/g' deps/nghttp2/nghttp2.gyp
        echo y | ./tools/dep_updaters/update-undici.sh
        ./tools/dep_updaters/update-npm.sh 10.4.0
      working-directory: /opt/nodejs
    - name: Build OpenSSL
      run: |
        make -C deps/openssl/config clean
        make -C deps/openssl/config
      working-directory: /opt/nodejs
    - name: Build nodejs ${{ env.NODEJS_VERSION }}
      run: |
        ./configure --prefix=/usr/local --openssl-is-fips
        make -j8
        sudo make install
      working-directory: /opt/nodejs
    - name: Package nodejs ${{ env.NODEJS_VERSION }}-r${{ env.RELEASE_BUILD }}
      run: |
        sudo cp -R /opt/nodejs/out/Release/obj.target/deps/openssl/lib/openssl-modules/ /usr/local/lib/
        sudo mkdir -p /usr/local/etc
        sudo cp -R /opt/nodejs/out/Release/obj.target/deps/openssl/fipsmodule.cnf /usr/local/etc/fipsmodule.cnf
        tar --create --file=nodejs-$NODEJS_VERSION-r$RELEASE_BUILD.tar.xz --directory=/usr/local --xz --verbose --utc bin/ share/ lib/ include/ etc/
      working-directory: /tmp
    - name: Create GitHub release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NODEJS_VERSION }}-r${{ env.RELEASE_BUILD }}
        release_name: NodeJS release ${{ env.NODEJS_VERSION }}-r${{ env.RELEASE_BUILD }}
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: /tmp/nodejs-${{ env.NODEJS_VERSION }}-r${{ env.RELEASE_BUILD }}.tar.xz
        asset_name: nodejs-${{ env.NODEJS_VERSION }}-r${{ env.RELEASE_BUILD }}.tar.xz
        asset_content_type: application/x-xz
